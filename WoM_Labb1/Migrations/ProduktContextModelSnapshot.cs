// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WoM_Labb1.Data;

namespace WoM_Labb1.Migrations
{
    [DbContext(typeof(ProduktContext))]
    partial class ProduktContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WoM_Labb1.Models.Customer", b =>
                {
                    b.Property<string>("personnummer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("efternamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fornamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("postnr")
                        .HasColumnType("int");

                    b.Property<string>("telefonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("personnummer");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("WoM_Labb1.Models.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customerpersonnummer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("personnummer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("orderId");

                    b.HasIndex("Customerpersonnummer");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("WoM_Labb1.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Pris")
                        .HasColumnType("int");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("int");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailsId");

                    b.HasIndex("ProduktId");

                    b.HasIndex("orderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WoM_Labb1.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<byte[]>("productImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("productInStore")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("productPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("WoM_Labb1.Models.ShoppingCart", b =>
                {
                    b.Property<int>("VarukorgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("VarukorgId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("WoM_Labb1.Models.Order", b =>
                {
                    b.HasOne("WoM_Labb1.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customerpersonnummer");
                });

            modelBuilder.Entity("WoM_Labb1.Models.OrderDetails", b =>
                {
                    b.HasOne("WoM_Labb1.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId");

                    b.HasOne("WoM_Labb1.Models.Order", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WoM_Labb1.Models.ShoppingCart", b =>
                {
                    b.HasOne("WoM_Labb1.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId");
                });
#pragma warning restore 612, 618
        }
    }
}
